
//Understanding the Companion objects - Id is generated by the next ID.
//The same name object that lives with the class in the same file is the Companion object
//They can access each other's private members
//Why we use Companion objects ?  For factory methods ? Function vs Method, Factory methods
//apply method - a keyword to mark a method as default
package pack2

class Companion(val customerName:String) {
  private val id = Companion.nextID;
}

object Companion {
  def apply(name: String, address: String) = new Companion(name);

  def apply(name: String, pin: Int) = new Companion(name);

  def main(args : Array[String]) {
    Companion.apply("Rajesh", "3 Lathom")
    Companion("Rajesh", "3 Lathom") //apply method is called by matching the arguments
    Companion("Rajesh", 3)
  }
  private var sequenceOfIds : Int = 0;
  private def nextID = {
    sequenceOfIds+=1
    sequenceOfIds
  }
}